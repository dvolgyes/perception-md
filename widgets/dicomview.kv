

<Controller>:
    dcm1: dcm1
    dcm2: dcm2
    plot: plot
    patientsize: toggle
    text_wid1: text1
    uid1: dcm1.spinner.text
    sl1: dcm1.index.value
    on_sl1:
        dcm1.draw_objects()
    sl2: dcm2.index.value
    on_sl2:
        dcm2.draw_objects()
    on_uid1:
        self.select_volume(1,dcm1.spinner.text)
    uid2: dcm2.spinner.text
    on_uid2:
        self.select_volume(2,dcm2.spinner.text)

    BoxLayout:
        BoxLayout:
            size_hint: 0.25,1.0
            orientation: 'vertical'

            Button:
                text: "Update reference"
                on_press:
                    for kid in self.parent.children: kid.color=[1,1,1,1]
                    root.pressed(self.text)

            Button:
                text: "Reset"
                on_press:
                    for kid in self.parent.children: kid.color=[1,1,1,1]
                    root.pressed(self.text)

            Button:
                text: "Preset from reference"
                on_press:
                    for kid in self.parent.children: kid.color=[1,1,1,1]
                    root.pressed(self.text)


            ToggleButton:
                id: toggle
                text: "Large"
                on_state:
                    root.pressed("TOGGLE "+self.state)

#            Button:
#                text: "NPS"
#                on_press:
#                    for kid in self.parent.children: kid.color=[1,1,1,1]
#                    self.color = [1,0.5,0.5,1]
#                    root.pressed(self.text)
#
#            Button:
#                text: "MTF"
#                on_press:
#                    for kid in self.parent.children: kid.color=[1,1,1,1]
#                    self.color = [1,0.5,0.5,1]
#                    root.pressed(self.text)
            Button:
                text: "Nodule 1"
                color: [1,0.5,0.5,1]
                on_press:
                    for kid in self.parent.children: kid.color=[1,1,1,1]
                    self.color = [1,0.5,0.5,1]
                    root.pressed(self.text)
            Button:
                text: "Nodule 2"
                on_press:
                    for kid in self.parent.children: kid.color=[1,1,1,1]
                    self.color = [1,0.5,0.5,1]
                    root.pressed(self.text)
            Button:
                text: "Nodule 3"
                on_press:
                    for kid in self.parent.children: kid.color=[1,1,1,1]
                    self.color = [1,0.5,0.5,1]
                    root.pressed(self.text)
            Button:
                text: "Nodule 4"
                on_press:
                    for kid in self.parent.children: kid.color=[1,1,1,1]
                    self.color = [1,0.5,0.5,1]
                    root.pressed(self.text)
            Button:
                text: "Nodule 5"
                on_press:
                    for kid in self.parent.children: kid.color=[1,1,1,1]
                    self.color = [1,0.5,0.5,1]
                    root.pressed(self.text)
            Button:
                text: "Nodule 6"
                on_press:
                    for kid in self.parent.children: kid.color=[1,1,1,1]
                    self.color = [1,0.5,0.5,1]
                    root.pressed(self.text)
            Button:
                text: "Nodule 7"
                on_press:
                    for kid in self.parent.children: kid.color=[1,1,1,1]
                    self.color = [1,0.5,0.5,1]
                    root.pressed(self.text)
            Button:
                text: "Nodule 8"
                on_press:
                    for kid in self.parent.children: kid.color=[1,1,1,1]
                    self.color = [1,0.5,0.5,1]
                    root.pressed(self.text)
            Button:
                text: "Air"
                on_press:
                    for kid in self.parent.children: kid.color=[1,1,1,1]
                    self.color = [1,0.5,0.5,1]
                    root.pressed(self.text)
            Button:
                text: "Heart"
                on_press:
                    for kid in self.parent.children: kid.color=[1,1,1,1]
                    self.color = [1,0.5,0.5,1]
                    root.pressed(self.text)
            Button:
                text: "Soft tissue"
                on_press:
                    for kid in self.parent.children: kid.color=[1,1,1,1]
                    self.color = [1,0.5,0.5,1]
                    root.pressed(self.text)

            Button:
                text: "next"
                on_press:
                    for kid in self.parent.children: kid.color=[1,1,1,1]
                    root.pressed(self.text)
                    text1.text = ""

            BoxLayout:
                Button:
                    text: "Lung"
                    on_press:
                        dcm1.hu_center.value = -800
                        dcm1.hu_width.value = 700
                Button:
                    text: "Soft tissue"
                    on_press:
                        dcm1.hu_center.value = 0
                        dcm1.hu_width.value = 300
                Button:
                    text: "Bones"
                    on_press:
                        dcm1.hu_center.value = 400
                        dcm1.hu_width.value = 1000


            TextInput:
                size_hint: 1.0,6.0
                id: text1
                use_handles: True
                readonly: False
                font_name: "/usr/share/fonts/truetype/ubuntu-font-family/UbuntuMono-R"

            Image:
                id: plot
                size_hint: 1.0,10.0
                allow_stretch: True
                nocache: True
                source: 'left.png'

            BoxLayout:
                ImageButton:
                    source: 'left.png'
                    on_press:
                        dcm2.adjust( (0,-1) )
                        dcm1.draw_objects()
                ImageButton:
                    source: 'up.png'
                    on_press:
                        dcm2.adjust( (1,0) )
                        dcm1.draw_objects()
                ImageButton:
                    source: 'down.png'
                    on_press:
                        dcm2.adjust( (-1,0) )
                        dcm1.draw_objects()
                ImageButton:
                    source: 'right.png'
                    on_press:
                        dcm2.adjust( (0,1) )
                        dcm1.draw_objects()
        BoxLayout:
            DICOMVIEW:
                size_hint: 1.0,1.0

                id: dcm1
                label1: dcm1.hu_center.value
                label2: dcm1.hu_width.value
                label3: dcm1.gamma.value
                label4: dcm1.index.value
                label5: dcm1.shift.value
                on_label1:
                    dcm2.hu_center.value = self.hu_center.value
                    dcm1.update_img()
                on_label2:
                    dcm2.hu_width.value = self.hu_width.value
                    dcm1.update_img()
                on_label3:
                    dcm2.gamma.value = self.gamma.value
                    dcm1.update_img()
                on_label4:
                    dcm2.index.value = self.index.value
                    dcm1.update_img()
                on_label5:
                    dcm2.shift.value = -self.shift.value
                    dcm1.update_img()
            DICOMVIEW:
                size_hint: 2.0,2.0
                id: dcm2
                label1: dcm2.hu_center.value
                label2: dcm2.hu_width.value
                label3: dcm2.gamma.value
                label4: dcm2.index.value
                label5: dcm2.shift.value

                on_label1:
                    dcm1.hu_center.value = self.hu_center.value
                    dcm2.update_img()
                on_label2:
                    dcm1.hu_width.value = self.hu_width.value
                    dcm2.update_img()
                on_label3:
                    dcm1.gamma.value = self.gamma.value
                    dcm2.update_img()
                on_label4:
                    dcm1.index.value = self.index.value
                    dcm2.update_img()

                on_label5:
                    dcm1.shift.value = -self.shift.value
                    dcm2.update_img()
